Starting audit...
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:3:8: Unused import - filters.Filter. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:15:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:16:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:16:41: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:16:58: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:16:78: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:51: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:57: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:58: Line is longer than 100 characters (found 153). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:69:36: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:69:53: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:79:36: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:79:53: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:79:66: Parameter movieList should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:80:36: Parameter filterByCountry should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:86: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:86:36: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:86:53: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:86:66: Parameter movieInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:86:89: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\ChangePage.java:89: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:8:8: Unused import - java.util.List. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:10:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:11:30: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:11:43: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\CommandParser.java:11:60: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\HomepageSetter.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\HomepageSetter.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\HomepageSetter.java:7:31: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:12:8: Unused import - java.math.BigDecimal. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:13:8: Unused import - java.math.RoundingMode. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:14:8: Unused import - java.util.Formatter. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:28:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'findMovieInstance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'findMovieInstance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:28:41: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:28:66: Parameter movieName should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:30:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:36:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'findMovieIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'findMovieIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:36:31: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:36:56: Parameter movieName should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:39:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'getMovieDetails' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'getMovieDetails' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:33: Parameter movieInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:56: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:71: Parameter user should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:46:87: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'purchaseMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'purchaseMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:31: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:44: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:59: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:56:76: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:68: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:88: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:92: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:105:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'purchaseMovieStandardAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'purchaseMovieStandardAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:105:46: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:105:63: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:105:78: Parameter movie should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:113: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:117: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:120:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'watchMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'watchMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:120:28: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:120:45: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:120:60: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:124: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:126: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:138: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'likeMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'likeMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:27: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:40: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:57: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:141:72: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:158: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'rateMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'rateMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:27: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:40: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:57: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:161:72: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:201: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:204:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'round2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'round2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:204:19: Parameter value should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:205:20: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:205:30: '100' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:205:36: '0.5' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:205:43: '100.0' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'modifyAppearances' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'modifyAppearances' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:35: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:48: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:65: Parameter movie should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:209:83: Parameter rateOrLike should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:211: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:240:5: Class 'MovieCommands' looks like designed for extension (can be subclassed), but the method 'findMovieInstanceForEdgeCase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieCommands' final or making the method 'findMovieInstanceForEdgeCase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:240:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:240:52: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:240:69: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:243: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\MovieCommands.java:245: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:3:15: Using the '.*' form of import should be avoided - filters.*. [AvoidStarImport]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:4:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:6:8: Unused import - momentaryInstances.UserNow. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:9:8: Unused import - sorters.Sort. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:13:8: Unused import - java.io.ObjectOutput. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:18:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:19:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:19:41: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:19:58: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:19:78: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:37:34: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:37:47: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:37:64: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:37:84: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:39:89: '&&' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:47: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:59:31: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:59:44: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:59:61: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:59:81: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:61:86: '&&' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:65: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:69: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:79:32: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:79:45: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:79:62: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:79:82: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:86: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:93: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:102:32: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:102:45: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:102:62: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:102:82: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:107: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:114: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:114:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:115: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:121: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:121:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:122: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:144: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:156: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:163:35: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:163:52: Parameter action should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:163:72: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:173:43: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:173:60: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:173:85: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:176: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:183: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:183:39: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:183:52: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:183:69: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:183:94: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:193:36: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:193:53: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:193:78: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:203: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:203:35: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:203:48: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:203:65: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:203:90: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:214: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:214:35: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:214:48: Parameter pageNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:214:65: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\OnPage.java:214:90: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:4:8: Unused import - input.Input. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:20:5: Class 'TokenCommands' looks like designed for extension (can be subclassed), but the method 'buyTokens' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TokenCommands' final or making the method 'buyTokens' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:20:27: Parameter userInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:20:48: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:20:73: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:33:5: Class 'TokenCommands' looks like designed for extension (can be subclassed), but the method 'buyPremiumAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TokenCommands' final or making the method 'buyPremiumAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:33:35: Parameter userInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:33:56: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:33:81: Parameter output should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:35:13: '10' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\TokenCommands.java:47:63: '10' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:22:5: Class 'UserCommands' looks like designed for extension (can be subclassed), but the method 'userExists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserCommands' final or making the method 'userExists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:22:31: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:22:44: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:25:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:31:5: Class 'UserCommands' looks like designed for extension (can be subclassed), but the method 'checkCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserCommands' final or making the method 'checkCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:31:37: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:31:50: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:34: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:35: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:35:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:43:5: Class 'UserCommands' looks like designed for extension (can be subclassed), but the method 'findUserInDatabase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserCommands' final or making the method 'findUserInDatabase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:43:41: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:43:54: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:46:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:52:5: Class 'UserCommands' looks like designed for extension (can be subclassed), but the method 'userCanSeeMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserCommands' final or making the method 'userCanSeeMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:52:36: Parameter userInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:52:57: Parameter movieInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\commands\UserCommands.java:54:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\Filter.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByActors.java:7:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByActors.java:10:5: Class 'FilterByActors' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterByActors' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByActors.java:11:33: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByActors.java:11:58: Parameter content should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByCountry.java:10:5: Class 'FilterByCountry' looks like designed for extension (can be subclassed), but the method 'filter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterByCountry' final or making the method 'filter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByCountry.java:11:36: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByCountry.java:11:61: Parameter user should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByCountry.java:14:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByGenre.java:7:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByGenre.java:10:5: Class 'FilterByGenre' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterByGenre' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByGenre.java:11:33: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterByGenre.java:11:58: Parameter content should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterStartsWith.java:10:5: Class 'FilterStartsWith' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterStartsWith' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterStartsWith.java:11:33: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\FilterStartsWith.java:11:58: Parameter content should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\UserFilter.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\filters\UserFilter.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:14:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:18:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:18:25: Parameter type should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:22:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:26:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:26:25: Parameter page should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:30:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:34:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:34:28: Parameter feature should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:38:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:42:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:42:32: Parameter credentials should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:46:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:50:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:50:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:54:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:58:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:58:28: Parameter filters should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:62:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:66:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:66:25: Parameter movieRate should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:70:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:74:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:74:26: Parameter movie should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:78:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:82:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:82:26: Parameter count should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:86:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:88:31: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:89:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:90:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:91:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:92:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:93:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:94:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:95:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:96:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\ActionInput.java:97:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:10:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:14:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:14:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:18:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:22:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:22:29: Parameter password should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:26:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:30:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:30:32: Parameter accountType should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:34:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:38:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:38:28: Parameter country should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:42:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:46:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:46:28: Parameter balance should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:50:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:52:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:53:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:54:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:55:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:56:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\CredentialsInput.java:57:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:3:8: Unused import - filters.Filter. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:10:5: Class 'FilterInput' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterInput' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:14:5: Class 'FilterInput' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterInput' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:14:25: Parameter sort should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:18:5: Class 'FilterInput' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterInput' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:22:5: Class 'FilterInput' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterInput' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:22:29: Parameter movieSpecs should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:26:5: Class 'FilterInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:28:31: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:29:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\FilterInput.java:30:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:27:18: Parameter users should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:27:41: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:27:66: Parameter actions should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:33:41: Parameter inputInstance should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:37:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:41:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:41:26: Parameter users should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:45:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:49:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:49:27: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:53:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:57:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:57:28: Parameter actions should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:61:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:63:25: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:64:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:65:38: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\Input.java:66:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:22:23: Parameter movieNow should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:37:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'resetMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'resetMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:43:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'increaseLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'increaseLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:46:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'increaseNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'increaseNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:50:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:54:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:54:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:58:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:62:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:62:25: Parameter year should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:66:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:70:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:70:29: Parameter duration should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:74:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:78:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:78:27: Parameter genres should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:82:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:86:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:86:27: Parameter actors should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:90:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:94:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:94:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:98:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:102:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:102:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:106:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:110:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:110:27: Parameter rating should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:114:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:118:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:118:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:122:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:124:30: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:125:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:126:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:127:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:128:38: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:129:38: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\MovieInput.java:130:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:3:8: Unused import - sorters.Sort. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:9:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:13:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:13:27: Parameter rating should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:17:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:21:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:21:29: Parameter duration should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:26:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:28:29: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:29:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\SortInput.java:30:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:13:40: '15' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:18:22: Parameter currentUser should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:37:22: Parameter credentials should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:45:37: '15' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:52:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'resetUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'resetUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:58:37: '15' is a magic number. [MagicNumber]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:61:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:65:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:65:32: Parameter credentials should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:69:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:73:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:73:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:77:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:81:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:81:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:85:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:89:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:89:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:93:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:97:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:97:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:101:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:105:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:105:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:109:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:113:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:113:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:117:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:119:29: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:120:46: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:121:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:122:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:123:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:124:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:125:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\input\UserInput.java:126:66: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:9:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:13:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:13:27: Parameter actors should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:17:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:21:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:21:26: Parameter genre should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:25:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:29:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\items\Contains.java:29:28: Parameter country should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\Main.java:14:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\Main.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\Main.java:16:29: Parameter args should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:1:9: Name 'momentaryInstances' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:20:20: Parameter user should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:20:34: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:20:47: Parameter userCommands should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:21:20: Parameter tokensCommands should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:21:50: Parameter moviesActions should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:22:20: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:22:33: Parameter movieInputList should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:22:66: Parameter movieInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:32:20: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:32:33: Parameter input should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:40:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:44:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:44:25: Parameter user should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:48:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:52:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:52:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:56:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getUserCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getUserCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:60:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setUserCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setUserCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:60:33: Parameter userCommands should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:64:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getTokensCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getTokensCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:68:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setTokensCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setTokensCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:68:35: Parameter tokensCommands should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:72:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getMoviesCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getMoviesCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:76:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setMoviesCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setMoviesCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:76:35: Parameter moviesActions should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:80:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getMovieList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getMovieList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:84:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setMovieList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setMovieList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:84:30: Parameter movieInputList should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:88:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:92:5: Class 'PageNow' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageNow' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\PageNow.java:92:26: Parameter movieInput should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:1:9: Name 'momentaryInstances' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:17:5: Class 'UserNow' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserNow' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:21:5: Class 'UserNow' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserNow' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:21:25: Parameter user should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\momentaryInstances\UserNow.java:25:36: Parameter instance should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:20:26: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:20:62: Parameter currentUser should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:30:26: Parameter movie should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:30:44: Parameter currentUser should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:35:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'getError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'getError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:39:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'setError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'setError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:39:26: Parameter error should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:43:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'getCurrentMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'getCurrentMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:47:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'setCurrentMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'setCurrentMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:47:38: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:51:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'getCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'getCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:55:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'setCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'setCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:55:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:59:5: Class 'CommandOutput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandOutput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:61:33: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:62:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:63:60: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\CommandOutput.java:64:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\Output.java:9:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\Output.java:13:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\Output.java:15:26: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\output\Output.java:16:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\Sort.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByDuration.java:10:5: Class 'SortByDuration' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByDuration' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByDuration.java:11:21: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByDuration.java:11:46: Parameter parameter should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByDuration.java:15:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByDuration.java:16:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:10:5: Class 'SortByLikes' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByLikes' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:11:21: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:11:46: Parameter parameter should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:15:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByLikes.java:16:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:6:8: Unused import - java.util.Date. [UnusedImports]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:10:5: Class 'SortByRating' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByRating' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:11:21: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:11:46: Parameter parameter should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:15:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:16:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:21:5: Class 'SortByRating' looks like designed for extension (can be subclassed), but the method 'runForEqualCases' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByRating' final or making the method 'runForEqualCases' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:21:34: Parameter movies should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:21:59: Parameter parameter should be final. [FinalParameters]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:25:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:27:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:31:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:32:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:35:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\sorters\SortByRating.java:37:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\ANUL2\PROIECT_POO\proiect1\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 519 errors.
